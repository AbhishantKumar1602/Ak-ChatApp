<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .container {
            max-width: 420px;
            width: 100%;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 45px 40px;
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            animation: slideUp 0.5s ease;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        h2 {
            color: #333;
            margin-bottom: 10px;
            font-size: 32px;
            font-weight: 600;
        }

        .subtitle {
            color: #666;
            margin-bottom: 35px;
            font-size: 14px;
        }

        .input-group {
            position: relative;
            margin-bottom: 30px;
        }

        .input-group input {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e1e8ed;
            border-radius: 8px;
            font-size: 15px;
            transition: all 0.3s ease;
            background: #fff;
        }

        .input-group input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .input-group label {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: #999;
            font-size: 15px;
            pointer-events: none;
            transition: all 0.3s ease;
            background: #fff;
            padding: 0 5px;
        }

        .input-group input:focus + label,
        .input-group input:not(:placeholder-shown) + label {
            top: 0;
            font-size: 12px;
            color: #667eea;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 15px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #999;
            transition: color 0.3s ease;
            user-select: none;
        }

        .toggle-password:hover {
            color: #667eea;
        }

        button {
            width: 100%;
            padding: 14px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #fff;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 10px;
            position: relative;
            overflow: hidden;
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
        }

        button:active {
            transform: translateY(0);
        }

        button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .loader {
            display: none;
            width: 20px;
            height: 20px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top-color: #fff;
            border-radius: 50%;
            animation: spin 0.6s linear infinite;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
        }

        @keyframes spin {
            to { transform: translate(-50%, -50%) rotate(360deg); }
        }

        button.loading .btn-text {
            opacity: 0;
        }

        button.loading .loader {
            display: block;
        }

        .register-link {
            display: block;
            margin-top: 25px;
            text-align: center;
            color: #666;
            text-decoration: none;
            font-size: 14px;
            transition: color 0.3s ease;
        }

        .register-link:hover {
            color: #667eea;
        }

        .register-link a {
            color: #667eea;
            font-weight: 600;
            text-decoration: none;
        }

        .register-link a:hover {
            text-decoration: underline;
        }

        #msg {
            margin-top: 20px;
            padding: 12px;
            border-radius: 8px;
            font-size: 14px;
            text-align: center;
            display: none;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        #msg.success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
            display: block;
        }

        #msg.error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            display: block;
        }

        @media (max-width: 480px) {
            .container {
                padding: 35px 25px;
            }
            
            h2 {
                font-size: 28px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Welcome Back</h2>
        <p class="subtitle">Please login to your account</p>
        
        <form id="loginForm">
            <div class="input-group">
                <input type="text" name="identifier" placeholder=" " required>
                <label>Username or Email</label>
            </div>
            
            <div class="input-group password-wrapper">
                <input type="password" id="password" name="password" placeholder=" " required>
                <label>Password</label>
                <span class="toggle-password" onclick="togglePassword()">üëÅÔ∏è</span>
            </div>
            
            <button type="submit">
                <span class="btn-text">Login</span>
                <span class="loader"></span>
            </button>
        </form>
        
        <p class="register-link">
            Don't have an account? <a href="/register">Register</a>
        </p>
        
        <div id="msg"></div>
    </div>

    <script>
        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const toggleBtn = document.querySelector('.toggle-password');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleBtn.textContent = 'üîí';
            } else {
                passwordInput.type = 'password';
                toggleBtn.textContent = 'üëÅÔ∏è';
            }
        }

        document.getElementById('loginForm').onsubmit = async function(e) {
            e.preventDefault();
            const form = e.target;
            const button = form.querySelector('button');
            const msgDiv = document.getElementById('msg');
            
            // Add loading state
            button.classList.add('loading');
            button.disabled = true;
            msgDiv.style.display = 'none';
            
            try {
                const res = await fetch('/api/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        identifier: form.identifier.value,
                        password: form.password.value
                    })
                });
                
                const data = await res.json();
                
                // Remove loading state
                button.classList.remove('loading');
                button.disabled = false;
                
                // Display message
                msgDiv.textContent = data.message;
                msgDiv.className = res.ok ? 'success' : 'error';
                
                if (res.ok) {
                    setTimeout(() => {
                        window.location = '/users?me=' + encodeURIComponent(data.user.username);
                    }, 1000);
                }
            } catch (error) {
                button.classList.remove('loading');
                button.disabled = false;
                msgDiv.textContent = 'An error occurred. Please try again.';
                msgDiv.className = 'error';
            }
        };
    </script>
</body>
</html>
